{
  "v3pagelist": {
    "prefix": "v3pagelist",
    "body": [
      "<route lang=\"json5\" type=\"page\">",
      "{",
      "  layout: 'default',",
      "  style: {",
      "    navigationBarTitleText: '',",
      "  },",
      "}",
      "</route>",
      "",
      "<template>",
      "  <z-paging",
      "    ref=\"paging\"",
      "    v-model=\"dataList\"",
      "    @query=\"fetchData\"",
      "    :default-page-size=\"10\"",
      "    auto-show-back-to-top",
      "    safe-area-inset-bottom",
      "    use-safe-area-placeholder",
      "  >",
      "    <template #top></template>",
      "    <view class=\"item\" v-for=\"(item, index) in 100\" :key=\"index\">",
      "      <view class=\"xy-center\">{{ item }}</view>",
      "    </view>",
      "  </z-paging>",
      "</template>",
      "",
      "<script lang=\"ts\" setup>",
      "import { ref } from 'vue'",
      "import useToast from '@/hooks/useToast'",
      "",
      "",
      "const paging = ref<ZPagingInstance>()",
      "",
      "const dataList = ref([])",
      "",
      "const { errorToast } = useToast()",
      "const { showLoading, hideLoading } = useLoading()",
      "",
      "const fetchData: ZPagingEvent.Query = async (page, size) => {",
      "  try {",
      "    console.log('ðŸš€ ~ fetchData ~ page: number, size: number:', page, size)",
      "",
      "    showLoading()",
      "    const { data, code, msg } = await getList()",
      "    hideLoading()",
      "",
      "    console.log(data)",
      "",
      "    if (code === 0) {",
      "      paging.value.complete(data.list || [])",
      "    } else {",
      "      paging.value.complete(false)",
      "      errorToast(msg)",
      "    }",
      "  } catch (error) {",
      "    hideLoading()",
      "    paging.value.complete(false)",
      "  }",
      "}",
      "</script>",
      "",
    ],
    "description": "v3pagelist",
  },
}
